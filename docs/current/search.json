[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Open Source Software Development: A socio-technical course",
    "section": "",
    "text": "Most up to date version at https://howisonlab.github.io/open_source_software_course/current/\nWelcome to the materials for a course on open source software development, taught at the School of Information at the University of Texas at Austin. The course is taught by James Howison, with contributions from a set of wonderful TAs, including Chongyan Chen.\nThe course was developed as an undergraduate version of a course on Peer Production: Open Source, Wikipedia, and Beyond.\nI call this a “socio-technical course” because I interleave social theory about open source (such as theories of motivation, approaches to governance, sources of lack of diversity) in among the technical skills needed to participate in open source projects (git and github commands, markdown, unit testing, packaging). This interleaving is inspired equally by Karl Fogel’s approach in Producing Open Source Software, and the intellectual traditions of Sociotechnical Systems, Sociomateriality, and the Consortium for the Science of Sociotechnical Systems (CSST).\nIn these materials I present these in two separate sequences: “insights” and “skills”. When I teach, though, I interleave them in what I hope are synergistic ways. For example, when teaching about coordination theory, the week includes the git and github approaches to managing dependencies (such as identifying and resolving conflicts, as well as branching). I pair literature on knowledge sharing up with skills to do it, such as understanding Markdown and referring to Issues/Commits. You can see this interleaving in the most recent syllabus at Section 2.1.\nThe course begins with a two-part physical in-class exercise: students fold paper planes, and share improvements. The first exercise addresses how patents and copyright affect sharing, building on each others work, and the division of claims. The second takes a more technical tack, and addresses management of versions and conflicts. These exercises give a physical analog for the topics in the course, giving a grounding for discussing intellectual concepts and git commands.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Open Source Software Development: A socio-technical course</span>"
    ]
  },
  {
    "objectID": "insights/what_is_open_source.html",
    "href": "insights/what_is_open_source.html",
    "title": "4  Introduction: What is open source?",
    "section": "",
    "text": "4.1 Readings prior to class:",
    "crumbs": [
      "Insights",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Introduction: What is open source?</span>"
    ]
  },
  {
    "objectID": "insights/what_is_open_source.html#readings-prior-to-class",
    "href": "insights/what_is_open_source.html#readings-prior-to-class",
    "title": "4  Introduction: What is open source?",
    "section": "",
    "text": "Nadia Eghbal. (2020, December 3). The Making and Maintenance of our Open Source Infrastructure | Nadia Eghbal. https://www.youtube.com/watch?v=5wLKnN3To-k?start=2:00. Watch through ~8:00m.\nRichard Stallman. (2001, May 29). Richard M. Stallman’s speech: “Free Software: Freedom and Cooperation” [Speech Transcript]. https://www.gnu.org/philosophy/rms-nyu-2001-transcript.txt\nVICE (Director). (2020, March 3). Farmers Are Hacking Their Tractors Because of a Repair Ban. https://www.youtube.com/watch?v=EPYy_g8NzmI\niFixit (2022) What Right to Repair Looks like for Manufacturers.",
    "crumbs": [
      "Insights",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Introduction: What is open source?</span>"
    ]
  },
  {
    "objectID": "insights/what_is_open_source.html#where-is-open-source",
    "href": "insights/what_is_open_source.html#where-is-open-source",
    "title": "4  Introduction: What is open source?",
    "section": "4.2 Where is open source?",
    "text": "4.2 Where is open source?\nOpen source is everywhere.\nFamous pieces of open source software:\n\nFirefox browser\nZotero reference manager\nThe pandas data manipulation framework\n\nOften it is fairly hidden from end users. This can be because it is running on servers (and not installed by end-users), such as\n\nApache httpd\npostman\n\nSometimes it is just underneath a proprietary layer, such as\n\nChromium (underlies Chrome)\nVS Codium (underlies Microsoft’s VS Code)\n\nOften it is well ‘below the surface’ deeper in the dependencies.\n\nWindows (many, many components, famously the internet stack)\nMacOS (Darwin kernel)\nTableau (many components, see https://www.tableau.com/blog/tableau-and-open-source-advantage)\nSnowflake (Apache Arrow)\n\nOpen source is everywhere:\n\nLaptops\nPhones\nServers\nInternet routers (email, BGP)\nWifi routers\nCars, Radios, Watches, Batteries\nhttps://thenewstack.io/the-open-source-lesson-of-the-linksys-wrt54g-router/\nDatascience software.\nhttps://posit.co/products/open-source/rstudio/\nhttps://jupyter.org/governance/projectlicense.html",
    "crumbs": [
      "Insights",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Introduction: What is open source?</span>"
    ]
  },
  {
    "objectID": "insights/what_is_open_source.html#what-is-source",
    "href": "insights/what_is_open_source.html#what-is-source",
    "title": "4  Introduction: What is open source?",
    "section": "4.3 What is “source”?",
    "text": "4.3 What is “source”?\n\n\n\n\n\n\n\n\nthing\nexample\nartifact\nsource\n\n\n\n\nSoftware\nMini Motorways\nDownloadable App\nCode (e.g., C, Java, Python)\n\n\nWeb Page\nhttp://james.howison.name/index.html\nRendered page on screen\nHTML (plus CSS, plus JavaScript)\n\n\nGraphics card\nAMD GTX1080ti\nthe physical card\nGerber file\n\n\nMovie\nCaptain America\n.mov file\n...\n\n\nScientific Paper\n...\nA pdf\n...\n\n\nA building\n...\n...\n...\n\n\n\n\n\n\n\nThe source is what is needed to build the artifact, what is created in the process of creation, and what is needed to make changes in an artifact.\nColfer and Baldwin talk about open source as having “actionable transparency”; we can see the source … but we can also take action with the source.\nActivity/Discussion:\n\nWork with the table above:\n\n\nFill out the missing cells in the table above.\nAdd a line for the thing assigned to your group.\nAdd two further lines you as a group make up.\n\n\nDiscuss: Beyond the stuff of source, what else is needed for open collaboration?",
    "crumbs": [
      "Insights",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Introduction: What is open source?</span>"
    ]
  },
  {
    "objectID": "insights/what_is_open_source.html#why-open-source",
    "href": "insights/what_is_open_source.html#why-open-source",
    "title": "4  Introduction: What is open source?",
    "section": "4.4 Why open source?",
    "text": "4.4 Why open source?\n\n4.4.1 For the right to repair\nThe readings focused on this, highlighting current challenges in repair. You read about farmers who purchase John Deere farm equipment. Many want to be able to work on their equipment on their own, right on the farm. This is both because they are at a great distance from dealers, the equipment is expensive to transport, and they have paid a lot for the equipment and object to paying more to keep it working.\nIn many ways this is the same situation that Richard Stallman (founder of the Free Software Foundation) faced when dealing with the printer in his office. This is one of the foundational stories of the free software movement.\nHave you faced issues in trying to repair something? What prevented you?\nDiscussion: what is needed to repair a blender? A car? A list sorting algorithm? A web-page?\nWhat role does source code play? What else is needed?\n\n\n4.4.2 To avoid “proprietary lock in”\nThe popularity of open source can be understand as a kind of software escrow. Producers of tools want their users to rely on the tool, but if the code is hidden then a user is taking on a significant risk. That is is that the software stops getting updated because the company disappears. This means that maintenance stops, which means that the code suffers “bit rot” or “code collapse”.\n“Code collapse” occurs when software is not maintained. Not only do new features not appear, but security holes can be discovered which cannot be fixed. More subtly the code gets out of sync with its ecosystem, so that the way it talks to other software might stop working as other software is updated. If something changes in the software requirements (e.g., a change in the tax code) then the software cannot be updated.\nSo the buyer of proprietary software want an assurance that the software will continue to be updated, but no firm can assure its customers that it will be around for ever. To solve this purchasers used an approach called “Software Escrow”. Escrow means using a 3rd party (not the firm buying the software and not the firm building the software) to keep a copy of the software delivered. That escrow agent keeps that code secret unless specific events occurs, such as the software producer going out of business or discontinuing the product. In those cases the firm buying the code gets the source (and a license to use it). Escrow is a sort of insurance policy to help make relying on other people less risky.\nOpen source shares some of these characteristics. When building on someone else’s code, knowing it is open source means that the user can be sure they can taken over maintenance, even if the original developers stop working on the project.\n\n\n4.4.3 Shared maintenance of infrastructure\nWhen organizations compete with each other they want you to purchase their product, and not the product of their competitor. To purchase “Extra” brand chewing gum, and not “Trident” brand.\nYet much of the effort that goes into producing a product is spent on things that are not directly related to the product they are selling. Think of things like the supply of office furniture, the repainting of lines in the parking lot. These sort of efforts are known as “infrastructure”.\nIn many cases infrastructure is purchased from other companies, known as “contracting” or “out-sourcing”. The general logic is that companies that specialize in office furniture will do a better and cheaper job than if the chewing gum company was to make (or even buy) its own furniture. For example, Economics of scale mean that the outsourced furniture company can get bulk purchase discounts and pass them on to customers. They can also have full time people focused on monitoring safety issues with furniture and be responsible for fixing or replacing chairs that might injure people, saving the chewing gum company from lawsuits for dangerous chairs.\nMany users of open source are using open source software in the same way. For example IBM had a product called “WebSphere” which they sold to firms to run their “intranet” (internal corporate network publishing information or managing business processes). IBM originally wrote and maintained their own web server (as well as the application software that ran on top of it). Eventually, though, they changed to using the open source web server called Apache httpd. They argued that this saved them a lot of time maintaining their own infrastructure internally.\nIBM even started contributing changes that it needed or were helpful to their product back to httpd. They could have kept those changes secret, but then they would just have more infrastructure to maintain. Instead, they reasoned, they would contribute those changes back to httpd, effectively giving that work to their competitors (and everyone), but in return they received a lot more eyeballs on that code, ensuring that it was better tested and kept in sync.\nThey shared the cost of maintenance on the infrastructure to concentrate effort on their “secret sauce” of the WebSphere application layer, which was the thing that customers were really buying from them.\n\n\n4.4.4 The smartest people don’t work for you\nEach firm competes to hire great people. Yet it is unreasonable to think that you will have all the best people in the world working at your organization. For this reason firms seek to access outside intelligence. Sometimes this is possible through outsourcing, but other times problems are quite specific and require engagement with information or requirements that are quite specific to the business.\nBill Joy (from Sun Microsystems)is credited with the saying,\n\n“no matter who you are, most of the smartest people work for someone else,\n\nFirms therefore wna to access those smart people. Various approaches help, including “Crowdsourcing,” “innovation contests,” and “thought leadership” (publishing white papers and blogs that are discussed in public and then watching the discussion).\nOpen source projects are another place where expert outsiders can be found and engaged on topics of importance to firms.",
    "crumbs": [
      "Insights",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Introduction: What is open source?</span>"
    ]
  },
  {
    "objectID": "insights/what_is_open_source.html#why-is-open-source-interesting",
    "href": "insights/what_is_open_source.html#why-is-open-source-interesting",
    "title": "4  Introduction: What is open source?",
    "section": "4.5 Why is open source interesting?",
    "text": "4.5 Why is open source interesting?\nOpen source is interesting to a wide group of thinkers, both academics and thinkers in business and software.\n\nOpen source is successful. Almost all software has a foundation of open source, and open source tools successfully compete with proprietary software.\nThat success is unexpected. Why “give it away”, why “work for free”?\nOpen source (and Free Software) are politically engaged, holding the belief that they can changed the world through openness and freedom. Those building openly find this an emancipatory experience that they want to share with others (see Dunbar-Hestor’s “Hacking Diversity” book)\nOpen source is the leading edge of distributed work. Open source is done online, with participants that often don’t know each other and are all around the world. All the issues of remote work were encountered first in open source, which has developed interesting approaches to these problems.",
    "crumbs": [
      "Insights",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Introduction: What is open source?</span>"
    ]
  },
  {
    "objectID": "insights/what_is_open_source.html#topics-to-be-covered",
    "href": "insights/what_is_open_source.html#topics-to-be-covered",
    "title": "4  Introduction: What is open source?",
    "section": "4.6 Topics to be covered",
    "text": "4.6 Topics to be covered\n\nMotivations for participation\nLicences\nCoordination\nGovernance\nBias and lack of diversity\nSoftware collapse, packaging and dependencies\nContinuous Integration",
    "crumbs": [
      "Insights",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Introduction: What is open source?</span>"
    ]
  },
  {
    "objectID": "insights/coordination.html",
    "href": "insights/coordination.html",
    "title": "7  Coordination",
    "section": "",
    "text": "7.1 Pre-readings for class\nCoordination is a commonly used word, meaning what needs to be done for a group to work effectively together.\nIn the academic field of organization science, coordination has a more specific meaning, provided by Malone and Crowston (1994)1.\nWe will learn what this means, and how it relates to motivation for participation in open source, and discuss the role that version control and repositories play.",
    "crumbs": [
      "Insights",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Coordination</span>"
    ]
  },
  {
    "objectID": "insights/coordination.html#pre-readings-for-class",
    "href": "insights/coordination.html#pre-readings-for-class",
    "title": "7  Coordination",
    "section": "",
    "text": "Expectancy Theory (Wikipedia) https://en.wikipedia.org/wiki/Expectancy_theory\nExpectancy Theory (useful figure): https://web.archive.org/web/20220705161833/https://www.iedunote.com/expentancey-theory\nHowison, J., & Crowston, K. (2014). Collaboration through open superposition: A theory of the open source way. MIS Quarterly, 38(1), 29–50. http://james.howison.name/pubs/howison-2014-superposition.pdf\n“My favorite commit”: https://dhwthompson.com/2019/my-favourite-git-commit",
    "crumbs": [
      "Insights",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Coordination</span>"
    ]
  },
  {
    "objectID": "insights/coordination.html#presentation",
    "href": "insights/coordination.html#presentation",
    "title": "7  Coordination",
    "section": "7.2 Presentation",
    "text": "7.2 Presentation\n\n&lt;div id=\"quarto-navigation-envelope\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1zaWRlYmFyLXRpdGxl\"&gt;Open Source Software Development: A socio-technical course&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXItdGl0bGU=\"&gt;Open Source Software Development: A socio-technical course&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uZXh0\"&gt;&lt;span class=\"chapter-number\"&gt;8&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Governance&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1wcmV2\"&gt;&lt;span class=\"chapter-number\"&gt;6&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Licenses&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1zaWRlYmFyOi9pbmRleC5odG1sPHNwYW4tY2xhc3M9J2NoYXB0ZXItbnVtYmVyJz4xPC9zcGFuPi0tPHNwYW4tY2xhc3M9J2NoYXB0ZXItdGl0bGUnPk9wZW4tU291cmNlLVNvZnR3YXJlLURldmVsb3BtZW50Oi1BLXNvY2lvLXRlY2huaWNhbC1jb3Vyc2U8L3NwYW4+\"&gt;&lt;span class=\"chapter-number\"&gt;1&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Open Source Software Development: A socio-technical course&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1zaWRlYmFyOi9vc3Nfc3lsbGFidXMuaHRtbDxzcGFuLWNsYXNzPSdjaGFwdGVyLW51bWJlcic+Mjwvc3Bhbj4tLTxzcGFuLWNsYXNzPSdjaGFwdGVyLXRpdGxlJz5TeWxsYWJ1cy1mb3ItT3Blbi1Tb3VyY2UtU29mdHdhcmUtRGV2ZWxvcG1lbnQ8L3NwYW4+\"&gt;&lt;span class=\"chapter-number\"&gt;2&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Syllabus for Open Source Software Development&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1zaWRlYmFyOnF1YXJ0by1zaWRlYmFyLXNlY3Rpb24tMQ==\"&gt;Insights&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1zaWRlYmFyOi9pbnNpZ2h0cy9wYXBlcl9wbGFuZV9pbm5vdmF0aW9uLmh0bWw8c3Bhbi1jbGFzcz0nY2hhcHRlci1udW1iZXInPjM8L3NwYW4+LS08c3Bhbi1jbGFzcz0nY2hhcHRlci10aXRsZSc+UGFwZXItcGxhbmVzLWFzLWFuLWFuYWxvZ3ktZm9yLXBlZXItcHJvZHVjdGlvbjwvc3Bhbj4=\"&gt;&lt;span class=\"chapter-number\"&gt;3&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Paper planes as an analogy for peer production&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1zaWRlYmFyOi9pbnNpZ2h0cy93aGF0X2lzX29wZW5fc291cmNlLmh0bWw8c3Bhbi1jbGFzcz0nY2hhcHRlci1udW1iZXInPjQ8L3NwYW4+LS08c3Bhbi1jbGFzcz0nY2hhcHRlci10aXRsZSc+SW50cm9kdWN0aW9uOi1XaGF0LWlzLW9wZW4tc291cmNlPzwvc3Bhbj4=\"&gt;&lt;span class=\"chapter-number\"&gt;4&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Introduction: What is open source?&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1zaWRlYmFyOi9pbnNpZ2h0cy9tb3RpdmF0aW9ucy5odG1sPHNwYW4tY2xhc3M9J2NoYXB0ZXItbnVtYmVyJz41PC9zcGFuPi0tPHNwYW4tY2xhc3M9J2NoYXB0ZXItdGl0bGUnPk1vdGl2YXRpb25zPC9zcGFuPg==\"&gt;&lt;span class=\"chapter-number\"&gt;5&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Motivations&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1zaWRlYmFyOi9pbnNpZ2h0cy9saWNlbnNlcy5odG1sPHNwYW4tY2xhc3M9J2NoYXB0ZXItbnVtYmVyJz42PC9zcGFuPi0tPHNwYW4tY2xhc3M9J2NoYXB0ZXItdGl0bGUnPkxpY2Vuc2VzPC9zcGFuPg==\"&gt;&lt;span class=\"chapter-number\"&gt;6&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Licenses&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1zaWRlYmFyOi9pbnNpZ2h0cy9jb29yZGluYXRpb24uaHRtbDxzcGFuLWNsYXNzPSdjaGFwdGVyLW51bWJlcic+Nzwvc3Bhbj4tLTxzcGFuLWNsYXNzPSdjaGFwdGVyLXRpdGxlJz5Db29yZGluYXRpb248L3NwYW4+\"&gt;&lt;span class=\"chapter-number\"&gt;7&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Coordination&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1zaWRlYmFyOi9pbnNpZ2h0cy9nb3Zlcm5hbmNlLmh0bWw8c3Bhbi1jbGFzcz0nY2hhcHRlci1udW1iZXInPjg8L3NwYW4+LS08c3Bhbi1jbGFzcz0nY2hhcHRlci10aXRsZSc+R292ZXJuYW5jZTwvc3Bhbj4=\"&gt;&lt;span class=\"chapter-number\"&gt;8&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Governance&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1zaWRlYmFyOi9pbnNpZ2h0cy9iaWFzX2xhY2tfb2ZfZGl2ZXJzaXR5Lmh0bWw8c3Bhbi1jbGFzcz0nY2hhcHRlci1udW1iZXInPjk8L3NwYW4+LS08c3Bhbi1jbGFzcz0nY2hhcHRlci10aXRsZSc+Qmlhcy1hbmQtTGFjay1vZi1EaXZlcnNpdHk8L3NwYW4+\"&gt;&lt;span class=\"chapter-number\"&gt;9&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Bias and Lack of Diversity&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1zaWRlYmFyOi9pbnNpZ2h0cy9zdGFja19hbmRfc3RyZWFtLmh0bWw8c3Bhbi1jbGFzcz0nY2hhcHRlci1udW1iZXInPjEwPC9zcGFuPi0tPHNwYW4tY2xhc3M9J2NoYXB0ZXItdGl0bGUnPkZyb20tU3RhY2ssLXRvLXN0cmVhbSwtdG8tZWNvc3lzdGVtLjwvc3Bhbj4=\"&gt;&lt;span class=\"chapter-number\"&gt;10&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;From Stack, to stream, to ecosystem.&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1zaWRlYmFyOi9pbnNpZ2h0cy9hZ2lsZS5odG1sPHNwYW4tY2xhc3M9J2NoYXB0ZXItbnVtYmVyJz4xMTwvc3Bhbj4tLTxzcGFuLWNsYXNzPSdjaGFwdGVyLXRpdGxlJz5JdGVyYXRpdmUtRGV2ZWxvcG1lbnQsLVJlZ3Jlc3Npb24tVGVzdHMsLWFuZC1Db250aW51b3VzLUludGVncmF0aW9uPC9zcGFuPg==\"&gt;&lt;span class=\"chapter-number\"&gt;11&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Iterative Development, Regression Tests, and Continuous Integration&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1zaWRlYmFyOnF1YXJ0by1zaWRlYmFyLXNlY3Rpb24tMg==\"&gt;Skills&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1zaWRlYmFyOi9za2lsbHMvcGFwZXJfcGxhbmVzX2dpdC5odG1sPHNwYW4tY2xhc3M9J2NoYXB0ZXItbnVtYmVyJz4xMjwvc3Bhbj4tLTxzcGFuLWNsYXNzPSdjaGFwdGVyLXRpdGxlJz5QYXBlci1QbGFuZXMtRXhlcmNpc2UtMjotVmVyc2lvbi1jb250cm9sLWFuZC1jb2xsYWJvcmF0aW9uPC9zcGFuPg==\"&gt;&lt;span class=\"chapter-number\"&gt;12&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Paper Planes Exercise 2: Version control and collaboration&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1zaWRlYmFyOi9za2lsbHMvZ2l0X2Jhc2ljX3dvcmtmbG93Lmh0bWw8c3Bhbi1jbGFzcz0nY2hhcHRlci1udW1iZXInPjEzPC9zcGFuPi0tPHNwYW4tY2xhc3M9J2NoYXB0ZXItdGl0bGUnPkdpdC1iYXNpYy13b3JrZmxvdzwvc3Bhbj4=\"&gt;&lt;span class=\"chapter-number\"&gt;13&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Git basic workflow&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1zaWRlYmFyOi9za2lsbHMvZ2l0X3Jld2luZGluZ193b3JrLmh0bWw8c3Bhbi1jbGFzcz0nY2hhcHRlci1udW1iZXInPjE0PC9zcGFuPi0tPHNwYW4tY2xhc3M9J2NoYXB0ZXItdGl0bGUnPlJld2luZGluZy13b3JrPC9zcGFuPg==\"&gt;&lt;span class=\"chapter-number\"&gt;14&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Rewinding work&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1zaWRlYmFyOi9za2lsbHMvYnJhbmNoaW5nLmh0bWw8c3Bhbi1jbGFzcz0nY2hhcHRlci1udW1iZXInPjE1PC9zcGFuPi0tPHNwYW4tY2xhc3M9J2NoYXB0ZXItdGl0bGUnPkxvY2FsLWJyYW5jaGluZy13aXRoLUdpdDwvc3Bhbj4=\"&gt;&lt;span class=\"chapter-number\"&gt;15&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Local branching with Git&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1zaWRlYmFyOi9za2lsbHMvZ2l0aHViX3NvbG8uaHRtbDxzcGFuLWNsYXNzPSdjaGFwdGVyLW51bWJlcic+MTY8L3NwYW4+LS08c3Bhbi1jbGFzcz0nY2hhcHRlci10aXRsZSc+R2l0SHViLXNvbG88L3NwYW4+\"&gt;&lt;span class=\"chapter-number\"&gt;16&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;GitHub solo&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1zaWRlYmFyOi9za2lsbHMvZ2l0aHViX2NvbGxhYm9yYXRpb24uaHRtbDxzcGFuLWNsYXNzPSdjaGFwdGVyLW51bWJlcic+MTc8L3NwYW4+LS08c3Bhbi1jbGFzcz0nY2hhcHRlci10aXRsZSc+R2l0aHViLWNvbGxhYm9yYXRpb248L3NwYW4+\"&gt;&lt;span class=\"chapter-number\"&gt;17&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Github collaboration&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1zaWRlYmFyOi9za2lsbHMvZ2l0X2NoZXJyeXBpY2tfc3BsaXRfcHIuaHRtbDxzcGFuLWNsYXNzPSdjaGFwdGVyLW51bWJlcic+MTg8L3NwYW4+LS08c3Bhbi1jbGFzcz0nY2hhcHRlci10aXRsZSc+U3BsaXQtYS1QdWxsLVJlcXVlc3Q8L3NwYW4+\"&gt;&lt;span class=\"chapter-number\"&gt;18&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Split a Pull Request&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1zaWRlYmFyOi9za2lsbHMvZ2l0X3JlYmFzZS5odG1sPHNwYW4tY2xhc3M9J2NoYXB0ZXItbnVtYmVyJz4xOTwvc3Bhbj4tLTxzcGFuLWNsYXNzPSdjaGFwdGVyLXRpdGxlJz5SZWJhc2UtZm9yLXN5bmNocm9uaXppbmctd29yazwvc3Bhbj4=\"&gt;&lt;span class=\"chapter-number\"&gt;19&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Rebase for synchronizing work&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1zaWRlYmFyOi9za2lsbHMvZ2l0X2RlbGV0ZV9oaXN0b3J5Lmh0bWw8c3Bhbi1jbGFzcz0nY2hhcHRlci1udW1iZXInPjIwPC9zcGFuPi0tPHNwYW4tY2xhc3M9J2NoYXB0ZXItdGl0bGUnPlJlbW92aW5nLXNvbWV0aGluZy1mcm9tLWhpc3RvcnktZW50aXJlbHk8L3NwYW4+\"&gt;&lt;span class=\"chapter-number\"&gt;20&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Removing something from history entirely&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1zaWRlYmFyOi9za2lsbHMvdGVzdHMuaHRtbDxzcGFuLWNsYXNzPSdjaGFwdGVyLW51bWJlcic+MjE8L3NwYW4+LS08c3Bhbi1jbGFzcz0nY2hhcHRlci10aXRsZSc+VGVzdGluZzwvc3Bhbj4=\"&gt;&lt;span class=\"chapter-number\"&gt;21&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Testing&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1zaWRlYmFyOi9za2lsbHMvY29udGludW91c19pbnRlZ3JhdGlvbi5odG1sPHNwYW4tY2xhc3M9J2NoYXB0ZXItbnVtYmVyJz4yMjwvc3Bhbj4tLTxzcGFuLWNsYXNzPSdjaGFwdGVyLXRpdGxlJz5Db250aW51b3VzLUludGVncmF0aW9uLShha2EtQ0kvQ0QpPC9zcGFuPg==\"&gt;&lt;span class=\"chapter-number\"&gt;22&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Continuous Integration (aka CI/CD)&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1zaWRlYmFyOi9za2lsbHMvcGFja2FnaW5nLmh0bWw8c3Bhbi1jbGFzcz0nY2hhcHRlci1udW1iZXInPjIzPC9zcGFuPi0tPHNwYW4tY2xhc3M9J2NoYXB0ZXItdGl0bGUnPlBhY2thZ2VzLXRvLWRpc3RyaWJ1dGUtY29kZTwvc3Bhbj4=\"&gt;&lt;span class=\"chapter-number\"&gt;23&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Packages to distribute code&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1zaWRlYmFyOnF1YXJ0by1zaWRlYmFyLXNlY3Rpb24tMw==\"&gt;Appendices&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1zaWRlYmFyOi9za2lsbHMvc2tpbGxzX2ZhcS5odG1sPHNwYW4tY2xhc3M9J2NoYXB0ZXItbnVtYmVyJz5BPC9zcGFuPi0tPHNwYW4tY2xhc3M9J2NoYXB0ZXItdGl0bGUnPlNraWxscy1mYXE8L3NwYW4+\"&gt;&lt;span class=\"chapter-number\"&gt;A&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Skills faq&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1zaWRlYmFyOi9za2lsbHMvZ2xvc3NhcnkuaHRtbDxzcGFuLWNsYXNzPSdjaGFwdGVyLW51bWJlcic+Qjwvc3Bhbj4tLTxzcGFuLWNsYXNzPSdjaGFwdGVyLXRpdGxlJz5HbG9zc2FyeS1vZi1Db21tYW5kczwvc3Bhbj4=\"&gt;&lt;span class=\"chapter-number\"&gt;B&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Glossary of Commands&lt;/span&gt;&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWJyZWFkY3J1bWJzLUluc2lnaHRz\"&gt;Insights&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWJyZWFkY3J1bWJzLTxzcGFuLWNsYXNzPSdjaGFwdGVyLW51bWJlcic+Nzwvc3Bhbj4tLTxzcGFuLWNsYXNzPSdjaGFwdGVyLXRpdGxlJz5Db29yZGluYXRpb248L3NwYW4+\"&gt;&lt;span class=\"chapter-number\"&gt;7&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Coordination&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;div id=\"quarto-meta-markdown\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLW1ldGF0aXRsZQ==\"&gt;&lt;span id=\"sec-coordination\" class=\"quarto-section-identifier\"&gt;&lt;span class=\"chapter-number\"&gt;7&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Coordination&lt;/span&gt;&lt;/span&gt; – Open Source Software Development: A socio-technical course&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLXR3aXR0ZXJjYXJkdGl0bGU=\"&gt;&lt;span id=\"sec-coordination\" class=\"quarto-section-identifier\"&gt;&lt;span class=\"chapter-number\"&gt;7&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Coordination&lt;/span&gt;&lt;/span&gt; – Open Source Software Development: A socio-technical course&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLW9nY2FyZHRpdGxl\"&gt;&lt;span id=\"sec-coordination\" class=\"quarto-section-identifier\"&gt;&lt;span class=\"chapter-number\"&gt;7&lt;/span&gt;  &lt;span class=\"chapter-title\"&gt;Coordination&lt;/span&gt;&lt;/span&gt; – Open Source Software Development: A socio-technical course&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLW1ldGFzaXRlbmFtZQ==\"&gt;Open Source Software Development: A socio-technical course&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLXR3aXR0ZXJjYXJkZGVzYw==\"&gt;&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLW9nY2FyZGRkZXNj\"&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;/section&gt;\n&lt;section id=\"footnotes\" class=\"footnotes footnotes-end-of-document\" role=\"doc-endnotes\"&gt;\n&lt;hr /&gt;\n&lt;ol&gt;\n&lt;li id=\"fn1\"&gt;&lt;p&gt;Malone, T. W., &amp; Crowston, K. (1994). The interdisciplinary theory of coordination. ACM Computing Surveys, 26(1), 87–119. https://doi.org/10.1145/174666.174668 or http://ccs.mit.edu/papers/CCSWP157.html&lt;a href=\"#fnref1\" class=\"footnote-back\" role=\"doc-backlink\"&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;\n&lt;/ol&gt;\n&lt;/section&gt;\n\n&lt;/main&gt; &lt;!-- /main --&gt;\n&lt;script id = \"quarto-html-after-body\" type=\"application/javascript\"&gt;\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) =&gt; {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () =&gt; {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const isCodeAnnotation = (el) =&gt; {\n    for (const clz of el.classList) {\n      if (clz.startsWith('code-annotation-')) {                     \n        return true;\n      }\n    }\n    return false;\n  }\n  const onCopySuccess = function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    let tooltip;\n    if (window.bootstrap) {\n      button.setAttribute(\"data-bs-toggle\", \"tooltip\");\n      button.setAttribute(\"data-bs-placement\", \"left\");\n      button.setAttribute(\"data-bs-title\", \"Copied!\");\n      tooltip = new bootstrap.Tooltip(button, \n        { trigger: \"manual\", \n          customClass: \"code-copy-button-tooltip\",\n          offset: [0, -8]});\n      tooltip.show();    \n    }\n    setTimeout(function() {\n      if (tooltip) {\n        tooltip.hide();\n        button.removeAttribute(\"data-bs-title\");\n        button.removeAttribute(\"data-bs-toggle\");\n        button.removeAttribute(\"data-bs-placement\");\n      }\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  }\n  const getTextToCopy = function(trigger) {\n      const codeEl = trigger.previousElementSibling.cloneNode(true);\n      for (const childEl of codeEl.children) {\n        if (isCodeAnnotation(childEl)) {\n          childEl.remove();\n        }\n      }\n      return codeEl.innerText;\n  }\n  const clipboard = new window.ClipboardJS('.code-copy-button:not([data-in-quarto-modal])', {\n    text: getTextToCopy\n  });\n  clipboard.on('success', onCopySuccess);\n  if (window.document.getElementById('quarto-embedded-source-code-modal')) {\n    const clipboardModal = new window.ClipboardJS('.code-copy-button[data-in-quarto-modal]', {\n      text: getTextToCopy,\n      container: window.document.getElementById('quarto-embedded-source-code-modal')\n    });\n    clipboardModal.on('success', onCopySuccess);\n  }\n    var localhostRegex = new RegExp(/^(?:http|https):\\/\\/localhost\\:?[0-9]*\\//);\n    var mailtoRegex = new RegExp(/^mailto:/);\n      var filterRegex = new RegExp('/' + window.location.host + '/');\n    var isInternal = (href) =&gt; {\n        return filterRegex.test(href) || localhostRegex.test(href) || mailtoRegex.test(href);\n    }\n    // Inspect non-navigation links and adorn them if external\n \tvar links = window.document.querySelectorAll('a[href]:not(.nav-link):not(.navbar-brand):not(.toc-action):not(.sidebar-link):not(.sidebar-item-toggle):not(.pagination-link):not(.no-external):not([aria-hidden]):not(.dropdown-item):not(.quarto-navigation-tool):not(.about-link)');\n    for (var i=0; i&lt;links.length; i++) {\n      const link = links[i];\n      if (!isInternal(link.href)) {\n        // undo the damage that might have been done by quarto-nav.js in the case of\n        // links that we want to consider external\n        if (link.dataset.originalHref !== undefined) {\n          link.href = link.dataset.originalHref;\n        }\n      }\n    }\n  function tippyHover(el, contentFn, onTriggerFn, onUntriggerFn) {\n    const config = {\n      allowHTML: true,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start',\n    };\n    if (contentFn) {\n      config.content = contentFn;\n    }\n    if (onTriggerFn) {\n      config.onTrigger = onTriggerFn;\n    }\n    if (onUntriggerFn) {\n      config.onUntrigger = onUntriggerFn;\n    }\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i&lt;noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      if (note) {\n        return note.innerHTML;\n      } else {\n        return \"\";\n      }\n    });\n  }\n  const xrefs = window.document.querySelectorAll('a.quarto-xref');\n  const processXRef = (id, note) =&gt; {\n    // Strip column container classes\n    const stripColumnClz = (el) =&gt; {\n      el.classList.remove(\"page-full\", \"page-columns\");\n      if (el.children) {\n        for (const child of el.children) {\n          stripColumnClz(child);\n        }\n      }\n    }\n    stripColumnClz(note)\n    if (id === null || id.startsWith('sec-')) {\n      // Special case sections, only their first couple elements\n      const container = document.createElement(\"div\");\n      if (note.children && note.children.length &gt; 2) {\n        container.appendChild(note.children[0].cloneNode(true));\n        for (let i = 1; i &lt; note.children.length; i++) {\n          const child = note.children[i];\n          if (child.tagName === \"P\" && child.innerText === \"\") {\n            continue;\n          } else {\n            container.appendChild(child.cloneNode(true));\n            break;\n          }\n        }\n        if (window.Quarto?.typesetMath) {\n          window.Quarto.typesetMath(container);\n        }\n        return container.innerHTML\n      } else {\n        if (window.Quarto?.typesetMath) {\n          window.Quarto.typesetMath(note);\n        }\n        return note.innerHTML;\n      }\n    } else {\n      // Remove any anchor links if they are present\n      const anchorLink = note.querySelector('a.anchorjs-link');\n      if (anchorLink) {\n        anchorLink.remove();\n      }\n      if (window.Quarto?.typesetMath) {\n        window.Quarto.typesetMath(note);\n      }\n      if (note.classList.contains(\"callout\")) {\n        return note.outerHTML;\n      } else {\n        return note.innerHTML;\n      }\n    }\n  }\n  for (var i=0; i&lt;xrefs.length; i++) {\n    const xref = xrefs[i];\n    tippyHover(xref, undefined, function(instance) {\n      instance.disable();\n      let url = xref.getAttribute('href');\n      let hash = undefined; \n      if (url.startsWith('#')) {\n        hash = url;\n      } else {\n        try { hash = new URL(url).hash; } catch {}\n      }\n      if (hash) {\n        const id = hash.replace(/^#\\/?/, \"\");\n        const note = window.document.getElementById(id);\n        if (note !== null) {\n          try {\n            const html = processXRef(id, note.cloneNode(true));\n            instance.setContent(html);\n          } finally {\n            instance.enable();\n            instance.show();\n          }\n        } else {\n          // See if we can fetch this\n          fetch(url.split('#')[0])\n          .then(res =&gt; res.text())\n          .then(html =&gt; {\n            const parser = new DOMParser();\n            const htmlDoc = parser.parseFromString(html, \"text/html\");\n            const note = htmlDoc.getElementById(id);\n            if (note !== null) {\n              const html = processXRef(id, note);\n              instance.setContent(html);\n            } \n          }).finally(() =&gt; {\n            instance.enable();\n            instance.show();\n          });\n        }\n      } else {\n        // See if we can fetch a full url (with no hash to target)\n        // This is a special case and we should probably do some content thinning / targeting\n        fetch(url)\n        .then(res =&gt; res.text())\n        .then(html =&gt; {\n          const parser = new DOMParser();\n          const htmlDoc = parser.parseFromString(html, \"text/html\");\n          const note = htmlDoc.querySelector('main.content');\n          if (note !== null) {\n            // This should only happen for chapter cross references\n            // (since there is no id in the URL)\n            // remove the first header\n            if (note.children.length &gt; 0 && note.children[0].tagName === \"HEADER\") {\n              note.children[0].remove();\n            }\n            const html = processXRef(null, note);\n            instance.setContent(html);\n          } \n        }).finally(() =&gt; {\n          instance.enable();\n          instance.show();\n        });\n      }\n    }, function(instance) {\n    });\n  }\n      let selectedAnnoteEl;\n      const selectorForAnnotation = ( cell, annotation) =&gt; {\n        let cellAttr = 'data-code-cell=\"' + cell + '\"';\n        let lineAttr = 'data-code-annotation=\"' +  annotation + '\"';\n        const selector = 'span[' + cellAttr + '][' + lineAttr + ']';\n        return selector;\n      }\n      const selectCodeLines = (annoteEl) =&gt; {\n        const doc = window.document;\n        const targetCell = annoteEl.getAttribute(\"data-target-cell\");\n        const targetAnnotation = annoteEl.getAttribute(\"data-target-annotation\");\n        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));\n        const lines = annoteSpan.getAttribute(\"data-code-lines\").split(\",\");\n        const lineIds = lines.map((line) =&gt; {\n          return targetCell + \"-\" + line;\n        })\n        let top = null;\n        let height = null;\n        let parent = null;\n        if (lineIds.length &gt; 0) {\n            //compute the position of the single el (top and bottom and make a div)\n            const el = window.document.getElementById(lineIds[0]);\n            top = el.offsetTop;\n            height = el.offsetHeight;\n            parent = el.parentElement.parentElement;\n          if (lineIds.length &gt; 1) {\n            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);\n            const bottom = lastEl.offsetTop + lastEl.offsetHeight;\n            height = bottom - top;\n          }\n          if (top !== null && height !== null && parent !== null) {\n            // cook up a div (if necessary) and position it \n            let div = window.document.getElementById(\"code-annotation-line-highlight\");\n            if (div === null) {\n              div = window.document.createElement(\"div\");\n              div.setAttribute(\"id\", \"code-annotation-line-highlight\");\n              div.style.position = 'absolute';\n              parent.appendChild(div);\n            }\n            div.style.top = top - 2 + \"px\";\n            div.style.height = height + 4 + \"px\";\n            div.style.left = 0;\n            let gutterDiv = window.document.getElementById(\"code-annotation-line-highlight-gutter\");\n            if (gutterDiv === null) {\n              gutterDiv = window.document.createElement(\"div\");\n              gutterDiv.setAttribute(\"id\", \"code-annotation-line-highlight-gutter\");\n              gutterDiv.style.position = 'absolute';\n              const codeCell = window.document.getElementById(targetCell);\n              const gutter = codeCell.querySelector('.code-annotation-gutter');\n              gutter.appendChild(gutterDiv);\n            }\n            gutterDiv.style.top = top - 2 + \"px\";\n            gutterDiv.style.height = height + 4 + \"px\";\n          }\n          selectedAnnoteEl = annoteEl;\n        }\n      };\n      const unselectCodeLines = () =&gt; {\n        const elementsIds = [\"code-annotation-line-highlight\", \"code-annotation-line-highlight-gutter\"];\n        elementsIds.forEach((elId) =&gt; {\n          const div = window.document.getElementById(elId);\n          if (div) {\n            div.remove();\n          }\n        });\n        selectedAnnoteEl = undefined;\n      };\n        // Handle positioning of the toggle\n    window.addEventListener(\n      \"resize\",\n      throttle(() =&gt; {\n        elRect = undefined;\n        if (selectedAnnoteEl) {\n          selectCodeLines(selectedAnnoteEl);\n        }\n      }, 10)\n    );\n    function throttle(fn, ms) {\n    let throttle = false;\n    let timer;\n      return (...args) =&gt; {\n        if(!throttle) { // first call gets through\n            fn.apply(this, args);\n            throttle = true;\n        } else { // all the others get throttled\n            if(timer) clearTimeout(timer); // cancel #2\n            timer = setTimeout(() =&gt; {\n              fn.apply(this, args);\n              timer = throttle = false;\n            }, ms);\n        }\n      };\n    }\n      // Attach click handler to the DT\n      const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');\n      for (const annoteDlNode of annoteDls) {\n        annoteDlNode.addEventListener('click', (event) =&gt; {\n          const clickedEl = event.target;\n          if (clickedEl !== selectedAnnoteEl) {\n            unselectCodeLines();\n            const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');\n            if (activeEl) {\n              activeEl.classList.remove('code-annotation-active');\n            }\n            selectCodeLines(clickedEl);\n            clickedEl.classList.add('code-annotation-active');\n          } else {\n            // Unselect the line\n            unselectCodeLines();\n            clickedEl.classList.remove('code-annotation-active');\n          }\n        });\n      }\n  const findCites = (el) =&gt; {\n    const parentEl = el.parentElement;\n    if (parentEl) {\n      const cites = parentEl.dataset.cites;\n      if (cites) {\n        return {\n          el,\n          cites: cites.split(' ')\n        };\n      } else {\n        return findCites(el.parentElement)\n      }\n    } else {\n      return undefined;\n    }\n  };\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i&lt;bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const citeInfo = findCites(ref);\n    if (citeInfo) {\n      tippyHover(citeInfo.el, function() {\n        var popup = window.document.createElement('div');\n        citeInfo.cites.forEach(function(cite) {\n          var citeDiv = window.document.createElement('div');\n          citeDiv.classList.add('hanging-indent');\n          citeDiv.classList.add('csl-entry');\n          var biblioDiv = window.document.getElementById('ref-' + cite);\n          if (biblioDiv) {\n            citeDiv.innerHTML = biblioDiv.innerHTML;\n          }\n          popup.appendChild(citeDiv);\n        });\n        return popup.innerHTML;\n      });\n    }\n  }\n});\n&lt;/script&gt;\n&lt;nav class=\"page-navigation\"&gt;\n  &lt;div class=\"nav-page nav-page-previous\"&gt;\n      &lt;a  href=\"/insights/licenses.html\" class=\"pagination-link\" aria-label=\"Licenses\"&gt;\n        &lt;i class=\"bi bi-arrow-left-short\"&gt;&lt;/i&gt; &lt;span class=\"nav-page-text\"&gt;&lt;span class='chapter-number'&gt;6&lt;/span&gt;  &lt;span class='chapter-title'&gt;Licenses&lt;/span&gt;&lt;/span&gt;\n      &lt;/a&gt;          \n  &lt;/div&gt;\n  &lt;div class=\"nav-page nav-page-next\"&gt;\n      &lt;a  href=\"/insights/governance.html\" class=\"pagination-link\" aria-label=\"Governance\"&gt;\n        &lt;span class=\"nav-page-text\"&gt;&lt;span class='chapter-number'&gt;8&lt;/span&gt;  &lt;span class='chapter-title'&gt;Governance&lt;/span&gt;&lt;/span&gt; &lt;i class=\"bi bi-arrow-right-short\"&gt;&lt;/i&gt;\n      &lt;/a&gt;\n  &lt;/div&gt;\n&lt;/nav&gt;\n&lt;/div&gt; &lt;!-- /content --&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;",
    "crumbs": [
      "Insights",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Coordination</span>"
    ]
  }
]